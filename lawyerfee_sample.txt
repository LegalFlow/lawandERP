import React, { useState } from 'react';
import { ChevronDown, ChevronRight, Edit } from 'lucide-react';

const ClientFeeManagement = () => {
  const [expandedClients, setExpandedClients] = useState({});
  const [activeFilters, setActiveFilters] = useState({
    status: '전체',
    paymentStatus: '전체',
  });
  
  // 샘플 고객 데이터
  const clients = [
    {
      id: 1,
      contractDate: '2025-04-07',
      name: '홍길동',
      caseType: '개인회생',
      consultant: '김영찬',
      manager: '김지혜',
      totalFee: 2500000,
      paidFee: 1000000,
      idCard: '요청',
      seal: '요청',
      firstDocs: { completed: 7, total: 10 },
      secondDocs: { completed: 14, total: 20 },
      debtCert: { completed: 8, total: 10 },
      paymentStatus: '연체',
      contractStatus: '계약완료',
      payments: [
        { type: '송달료 등 부대비용', dueDate: '2025-04-28', amount: 743000, status: '완납', paidDate: '2025-04-29', method: 'CMS입금', memo: '' },
        { type: '착수금', dueDate: '2025-04-29', amount: 500000, status: '완납', paidDate: '2025-04-29', method: '서울계좌입금', memo: '' },
        { type: '1차 수임료', dueDate: '2025-05-29', amount: 500000, status: '완납', paidDate: '2025-05-29', method: '대전계좌입금', memo: '' },
        { type: '2차 수임료', dueDate: '2025-06-29', amount: 500000, status: '연체', paidDate: '', method: '', memo: '' },
        { type: '3차 수임료', dueDate: '2025-07-29', amount: 500000, status: '미납', paidDate: '', method: '', memo: '' },
        { type: '4차 수임료', dueDate: '2025-08-29', amount: 500000, status: '미납', paidDate: '', method: '', memo: '' },
      ]
    },
    {
      id: 2,
      contractDate: '2025-03-15',
      name: '김철수',
      caseType: '이혼',
      consultant: '박상담',
      manager: '이담당',
      totalFee: 3000000,
      paidFee: 2000000,
      idCard: '완료',
      seal: '완료',
      firstDocs: { completed: 10, total: 10 },
      secondDocs: { completed: 15, total: 15 },
      debtCert: { completed: 0, total: 0 },
      paymentStatus: '정상',
      contractStatus: '계약완료',
      payments: [
        { type: '착수금', dueDate: '2025-03-20', amount: 1000000, status: '완납', paidDate: '2025-03-20', method: '서울계좌입금', memo: '' },
        { type: '1차 수임료', dueDate: '2025-04-20', amount: 1000000, status: '완납', paidDate: '2025-04-19', method: 'CMS입금', memo: '' },
        { type: '2차 수임료', dueDate: '2025-05-20', amount: 1000000, status: '미납', paidDate: '', method: '', memo: '' },
      ]
    },
    {
      id: 3,
      contractDate: '2025-04-01',
      name: '이영희',
      caseType: '파산',
      consultant: '최상담',
      manager: '정담당',
      totalFee: 2000000,
      paidFee: 0,
      idCard: '미요청',
      seal: '미요청',
      firstDocs: { completed: 0, total: 10 },
      secondDocs: { completed: 0, total: 15 },
      debtCert: { completed: 0, total: 10 },
      paymentStatus: '미납',
      contractStatus: '계약진행중',
      payments: [
        { type: '송달료 등 부대비용', dueDate: '2025-04-15', amount: 650000, status: '미납', paidDate: '', method: '', memo: '' },
        { type: '착수금', dueDate: '2025-04-15', amount: 1000000, status: '미납', paidDate: '', method: '', memo: '' },
        { type: '1차 수임료', dueDate: '2025-05-15', amount: 500000, status: '미납', paidDate: '', method: '', memo: '' },
        { type: '2차 수임료', dueDate: '2025-06-15', amount: 500000, status: '미납', paidDate: '', method: '', memo: '' },
      ]
    }
  ];

  // 클라이언트 정보 확장/축소 토글
  const toggleClientExpand = (clientId) => {
    setExpandedClients(prev => ({
      ...prev,
      [clientId]: !prev[clientId]
    }));
  };

  // 상태에 따른 배지 스타일 반환
  const getStatusBadgeStyle = (status) => {
    switch(status) {
      case '요청':
        return 'bg-blue-100 text-blue-800';
      case '미요청':
        return 'bg-gray-100 text-gray-800';
      case '완료':
        return 'bg-green-100 text-green-800';
      case '연체':
        return 'bg-red-100 text-red-800';
      case '미납':
        return 'bg-yellow-100 text-yellow-800';
      case '정상':
        return 'bg-green-100 text-green-800';
      case '계약완료':
        return 'bg-green-100 text-green-800';
      case '계약진행중':
        return 'bg-blue-100 text-blue-800';
      case '계약해지':
        return 'bg-red-100 text-red-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  // 문서 진행 상태 표시기
  const DocProgressIndicator = ({ completed, total }) => {
    if (total === 0) return <span className="text-gray-400">해당없음</span>;
    
    const percentage = (completed / total) * 100;
    let bgColor = 'bg-red-500';
    
    if (percentage >= 100) {
      bgColor = 'bg-green-500';
    } else if (percentage >= 60) {
      bgColor = 'bg-blue-500';
    } else if (percentage >= 30) {
      bgColor = 'bg-yellow-500';
    }
    
    return (
      <div className="flex items-center">
        <div className="w-24 h-2 bg-gray-200 rounded-full overflow-hidden mr-2">
          <div className={`h-full ${bgColor}`} style={{ width: `${percentage}%` }}></div>
        </div>
        <span className="text-sm">{completed}/{total}</span>
      </div>
    );
  };

  // 납부 상태에 따른 색상 반환
  const getPaymentStatusColor = (status) => {
    switch(status) {
      case '완납':
        return 'text-green-600 font-medium';
      case '연체':
        return 'text-red-600 font-medium';
      case '미납':
        return 'text-yellow-600 font-medium';
      default:
        return 'text-gray-600';
    }
  };
  
  return (
    <div className="w-full max-w-full mx-auto p-4">
      <div className="mb-6">
        <h2 className="text-2xl font-bold">고객별 수임료 납부현황</h2>
      </div>
      
      <div className="overflow-x-auto">
        <table className="min-w-full bg-white border">
          <thead>
            <tr className="bg-gray-100 text-gray-600 text-sm leading-normal">
              <th className="py-3 px-4 text-left w-12"></th>
              <th className="py-3 px-4 text-left">계약일</th>
              <th className="py-3 px-4 text-left">고객명</th>
              <th className="py-3 px-4 text-left">사건분야</th>
              <th className="py-3 px-4 text-left">상담자</th>
              <th className="py-3 px-4 text-left">담당자</th>
              <th className="py-3 px-4 text-right">수임료</th>
              <th className="py-3 px-4 text-center">신분증</th>
              <th className="py-3 px-4 text-center">인감</th>
              <th className="py-3 px-4 text-center">1차서류</th>
              <th className="py-3 px-4 text-center">2차서류</th>
              <th className="py-3 px-4 text-center">부채증명서</th>
              <th className="py-3 px-4 text-center">납부상태</th>
              <th className="py-3 px-4 text-center">계약상태</th>
            </tr>
          </thead>
          <tbody className="text-gray-600 text-sm">
            {clients.map(client => (
              <React.Fragment key={client.id}>
                <tr className="border-b hover:bg-gray-50">
                  <td className="py-3 px-4 text-center">
                    <button 
                      onClick={() => toggleClientExpand(client.id)}
                      className="p-1 rounded-full hover:bg-gray-200"
                    >
                      {expandedClients[client.id] ? <ChevronDown size={16} /> : <ChevronRight size={16} />}
                    </button>
                  </td>
                  <td className="py-3 px-4">{client.contractDate}</td>
                  <td className="py-3 px-4 font-medium">{client.name}</td>
                  <td className="py-3 px-4">{client.caseType}</td>
                  <td className="py-3 px-4">{client.consultant}</td>
                  <td className="py-3 px-4">{client.manager}</td>
                  <td className="py-3 px-4 text-right font-medium">
                    {client.paidFee.toLocaleString()}/{client.totalFee.toLocaleString()}
                  </td>
                  <td className="py-3 px-4 text-center">
                    <span className={`px-2 py-1 rounded-full text-xs ${getStatusBadgeStyle(client.idCard)}`}>
                      {client.idCard}
                    </span>
                  </td>
                  <td className="py-3 px-4 text-center">
                    <span className={`px-2 py-1 rounded-full text-xs ${getStatusBadgeStyle(client.seal)}`}>
                      {client.seal}
                    </span>
                  </td>
                  <td className="py-3 px-4 text-center">
                    <DocProgressIndicator completed={client.firstDocs.completed} total={client.firstDocs.total} />
                  </td>
                  <td className="py-3 px-4 text-center">
                    <DocProgressIndicator completed={client.secondDocs.completed} total={client.secondDocs.total} />
                  </td>
                  <td className="py-3 px-4 text-center">
                    <DocProgressIndicator completed={client.debtCert.completed} total={client.debtCert.total} />
                  </td>
                  <td className="py-3 px-4 text-center">
                    <span className={`px-2 py-1 rounded-full text-xs ${getStatusBadgeStyle(client.paymentStatus)}`}>
                      {client.paymentStatus}
                    </span>
                  </td>
                  <td className="py-3 px-4 text-center">
                    <span className={`px-2 py-1 rounded-full text-xs ${getStatusBadgeStyle(client.contractStatus)}`}>
                      {client.contractStatus}
                    </span>
                  </td>
                </tr>
                
                {expandedClients[client.id] && (
                  <tr>
                    <td colSpan="14" className="p-0">
                      <div className="bg-gray-50 px-8 py-4">
                        <div className="mb-4">
                          <h3 className="font-medium mb-2">서류발급</h3>
                          <div className="flex space-x-4">
                            <label className="flex items-center space-x-2 cursor-pointer">
                              <input type="checkbox" className="form-checkbox h-4 w-4 text-blue-600" checked={client.idCard === '요청'} />
                              <span>신분증요청</span>
                            </label>
                            <label className="flex items-center space-x-2 cursor-pointer">
                              <input type="checkbox" className="form-checkbox h-4 w-4 text-blue-600" checked={client.seal === '요청'} />
                              <span>인감요청</span>
                            </label>
                            <label className="flex items-center space-x-2 cursor-pointer">
                              <input type="checkbox" className="form-checkbox h-4 w-4 text-blue-600" />
                              <span>1차서류요청</span>
                            </label>
                            <label className="flex items-center space-x-2 cursor-pointer">
                              <input type="checkbox" className="form-checkbox h-4 w-4 text-blue-600" />
                              <span>2차서류요청</span>
                            </label>
                            <label className="flex items-center space-x-2 cursor-pointer">
                              <input type="checkbox" className="form-checkbox h-4 w-4 text-blue-600" />
                              <span>부채증명서요청</span>
                            </label>
                            <label className="flex items-center space-x-2 cursor-pointer">
                              <input type="checkbox" className="form-checkbox h-4 w-4 text-blue-600" />
                              <span>계약해지</span>
                            </label>
                          </div>
                        </div>
                        
                        <table className="min-w-full bg-white border mt-4">
                          <thead>
                            <tr className="bg-gray-100 text-gray-600 text-sm leading-normal">
                              <th className="py-2 px-4 text-left">유형</th>
                              <th className="py-2 px-4 text-left">납부예정일</th>
                              <th className="py-2 px-4 text-right">납부예정액</th>
                              <th className="py-2 px-4 text-center">납부상태</th>
                              <th className="py-2 px-4 text-left">납부일</th>
                              <th className="py-2 px-4 text-left">납부방법</th>
                              <th className="py-2 px-4 text-center">메모</th>
                            </tr>
                          </thead>
                          <tbody>
                            {client.payments.map((payment, index) => (
                              <tr key={index} className="border-b hover:bg-gray-50">
                                <td className="py-2 px-4">{payment.type}</td>
                                <td className="py-2 px-4">{payment.dueDate}</td>
                                <td className="py-2 px-4 text-right">{payment.amount.toLocaleString()}</td>
                                <td className="py-2 px-4 text-center">
                                  {payment.status === '완납' ? (
                                    <span className={getPaymentStatusColor(payment.status)}>
                                      {payment.status}
                                    </span>
                                  ) : (
                                    <button className={`px-3 py-1 rounded text-white ${payment.status === '연체' ? 'bg-red-500 hover:bg-red-600' : 'bg-yellow-500 hover:bg-yellow-600'}`}>
                                      {payment.status}
                                    </button>
                                  )}
                                </td>
                                <td className="py-2 px-4">{payment.paidDate}</td>
                                <td className="py-2 px-4">{payment.method}</td>
                                <td className="py-2 px-4 text-center">
                                  <button className="p-1 rounded hover:bg-gray-200">
                                    <Edit size={16} />
                                  </button>
                                </td>
                              </tr>
                            ))}
                          </tbody>
                        </table>
                        
                        {/* 서류첨부 및 납부정보 수정 버튼 삭제 */}
                      </div>
                    </td>
                  </tr>
                )}
              </React.Fragment>
            ))}
          </tbody>
        </table>
      </div>
      
      <div className="mt-4 flex justify-between items-center">
        <div className="text-sm text-gray-600">
          총 {clients.length}명의 고객 | 미납: {clients.filter(c => c.paymentStatus === '미납').length}명 | 
          연체: {clients.filter(c => c.paymentStatus === '연체').length}명
        </div>
        
        <div className="flex space-x-1">
          <button className="w-8 h-8 flex items-center justify-center rounded hover:bg-gray-200">
            &lt;
          </button>
          <button className="w-8 h-8 flex items-center justify-center bg-blue-600 text-white rounded">
            1
          </button>
          <button className="w-8 h-8 flex items-center justify-center rounded hover:bg-gray-200">
            &gt;
          </button>
        </div>
      </div>
    </div>
  );
};

export default ClientFeeManagement;